
---
env: lfc
component: app
componentType: server

ports:
  - name: tcp
    protocol: TCP
    servicePort: 80
    containerPort: 8080
    appProtocol: http

serviceAccount:
  create: false
  name: "default"

service:
  enabled: true

ingress:
  port: 80

deployment:
  customNodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
          - key: eks.amazonaws.com/capacityType
            operator: In
            values:
              - ON_DEMAND

  replicaCount: 1

  terminationGracePeriodSeconds: 300
  # Resource limits can be tuned according to particular application requirements
  # https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-units-in-kubernetes
  resources:
    requests:
      cpu: 10m
      memory: 100Mi

  lifecycle:
    preStop:
      exec:
        command: ["/bin/sh", "-c", "sleep 120"]

  # Slowly rollout new pods during a deployment to
  # prevent too many being unavailable at any given time
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 100%

podDisruptionBudget:
  enabled: true
  maxUnavailable: 25%
